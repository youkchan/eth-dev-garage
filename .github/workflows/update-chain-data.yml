name: Update Chain Data

# 毎日午前3時に実行
on:
  schedule:
    - cron: '0 3 * * *'
  # 手動実行も可能
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-chain-data:
    name: Update Chain Data Files
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Create temporary directory
        run: mkdir -p temp
      
      - name: Make scripts executable
        run: |
          chmod +x ./scripts/download-chain-ids.sh
          chmod +x ./scripts/download-chains.sh
          chmod +x ./scripts/download-extra-rpcs.sh
          chmod +x ./scripts/download-bridge-network-data.sh
          chmod +x ./scripts/notifyError.sh
          chmod +x ./scripts/notifyUpdate.sh
      
      - name: Download chain-ids.json
        run: ./scripts/download-chain-ids.sh
      
      - name: Download chains.json
        run: ./scripts/download-chains.sh
      
      - name: Download extraRpcs.js
        run: ./scripts/download-extra-rpcs.sh
      
      - name: Download bridgeNetworkData.json
        run: ./scripts/download-bridge-network-data.sh
      
      - name: Check for structural changes
        id: check_structure
        run: |
          CHANGED_FILES=""
          
          # extraRpcs.jsはJavaScriptファイルなのでJSONチェックはスキップ
          
          # Check chain-ids.json structure
          if ! jq empty temp/chain-ids.json 2>/dev/null; then
            echo "chain-ids.json structure has changed"
            CHANGED_FILES="chain-ids.json $CHANGED_FILES"
          fi
          
          # Check chains.json structure
          if ! jq empty temp/chains.json 2>/dev/null; then
            echo "chains.json structure has changed"
            CHANGED_FILES="chains.json $CHANGED_FILES"
          fi
          
          # Check bridgeNetworkData.json structure
          if ! jq empty temp/bridgeNetworkData.json 2>/dev/null; then
            echo "bridgeNetworkData.json structure has changed"
            CHANGED_FILES="bridgeNetworkData.json $CHANGED_FILES"
          fi
          
          echo "changed_files=${CHANGED_FILES}" >> $GITHUB_OUTPUT
      
      - name: Notify structure changes
        if: steps.check_structure.outputs.changed_files != ''
        run: ./scripts/notifyError.sh "${{ secrets.SLACK_SECRET }}" "${{ steps.check_structure.outputs.changed_files }}"
        shell: bash
      
      - name: Check for content changes
        id: check_changes
        if: steps.check_structure.outputs.changed_files == ''
        run: |
          DIFF_OUTPUT=""
          HAS_CHANGES=false
          
          # Check chain-ids.json
          if [ -f "src/data/chain-ids.json" ]; then
            if ! cmp -s "src/data/chain-ids.json" "temp/chain-ids.json"; then
              echo "chain-ids.json has changes"
              # diffの出力を制限（最初の10行だけ）
              DIFF_OUTPUT="${DIFF_OUTPUT}chain-ids.json changes:\n$(diff -u src/data/chain-ids.json temp/chain-ids.json | head -n 10)\n...(truncated)...\n\n"
              HAS_CHANGES=true
            fi
          else
            echo "src/data/chain-ids.json does not exist, will create it"
            DIFF_OUTPUT="${DIFF_OUTPUT}chain-ids.json is new\n"
            HAS_CHANGES=true
          fi
          
          # Check chains.json
          if [ -f "src/data/chains.json" ]; then
            if ! cmp -s "src/data/chains.json" "temp/chains.json"; then
              echo "chains.json has changes"
              # diffの出力を制限（最初の10行だけ）
              DIFF_OUTPUT="${DIFF_OUTPUT}chains.json changes:\n$(diff -u src/data/chains.json temp/chains.json | head -n 10)\n...(truncated)...\n\n"
              HAS_CHANGES=true
            fi
          else
            echo "src/data/chains.json does not exist, will create it"
            DIFF_OUTPUT="${DIFF_OUTPUT}chains.json is new\n"
            HAS_CHANGES=true
          fi
          
          # Check extraRpcs.js
          if [ -f "src/data/extraRpcs.js" ]; then
            if ! cmp -s "src/data/extraRpcs.js" "temp/extraRpcs.js"; then
              echo "extraRpcs.js has changes"
              # diffの出力を制限（最初の10行だけ）
              DIFF_OUTPUT="${DIFF_OUTPUT}extraRpcs.js changes:\n$(diff -u src/data/extraRpcs.js temp/extraRpcs.js | head -n 10)\n...(truncated)...\n\n"
              HAS_CHANGES=true
            fi
          else
            echo "src/data/extraRpcs.js does not exist, will create it"
            DIFF_OUTPUT="${DIFF_OUTPUT}extraRpcs.js is new\n"
            HAS_CHANGES=true
          fi
          
          # Check bridgeNetworkData.json
          if [ -f "src/data/bridgeNetworkData.json" ]; then
            if ! cmp -s "src/data/bridgeNetworkData.json" "temp/bridgeNetworkData.json"; then
              echo "bridgeNetworkData.json has changes"
              # diffの出力を制限（最初の10行だけ）
              DIFF_OUTPUT="${DIFF_OUTPUT}bridgeNetworkData.json changes:\n$(diff -u src/data/bridgeNetworkData.json temp/bridgeNetworkData.json | head -n 10)\n...(truncated)...\n\n"
              HAS_CHANGES=true
            fi
          else
            echo "src/data/bridgeNetworkData.json does not exist, will create it"
            DIFF_OUTPUT="${DIFF_OUTPUT}bridgeNetworkData.json is new\n"
            HAS_CHANGES=true
          fi
          
          echo "has_changes=${HAS_CHANGES}" >> $GITHUB_OUTPUT
          echo "diff_output<<EOF" >> $GITHUB_OUTPUT
          echo "$DIFF_OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create branch and update files
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          # Create a new branch
          BRANCH_NAME="update-chain-data-$(date +%Y%m%d-%H%M%S)"
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git checkout -b $BRANCH_NAME
          
          # Ensure directory exists
          mkdir -p src/data
          
          # Update files
          cp temp/chain-ids.json src/data/chain-ids.json
          cp temp/chains.json src/data/chains.json
          cp temp/extraRpcs.js src/data/extraRpcs.js
          cp temp/bridgeNetworkData.json src/data/bridgeNetworkData.json
          
          # Commit changes
          git add src/data/chain-ids.json src/data/chains.json src/data/extraRpcs.js src/data/bridgeNetworkData.json
          git commit -m "Update chain data files $(date +%Y-%m-%d)"
          
          # Push branch
          git push origin $BRANCH_NAME
          
          # Create PR
          PR_URL=$(gh pr create --title "Update chain data files $(date +%Y-%m-%d)" \
            --body "This PR updates the following files:
            - chain-ids.json
            - chains.json
            - extraRpcs.js
            - bridgeNetworkData.json
            
            Changes:
            \`\`\`
            Files have been updated. Diff output is too large to display.
            \`\`\`" \
            --base main \
            --head $BRANCH_NAME)
          
          echo "PR created: $PR_URL"
          echo "pr_url=${PR_URL}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: create_pr
      
      - name: Notify update
        if: steps.check_changes.outputs.has_changes == 'true'
        run: ./scripts/notifyUpdate.sh "${{ secrets.SLACK_SECRET }}" "Files have been updated: chain-ids.json, chains.json, extraRpcs.js, bridgeNetworkData.json"
        shell: bash 
